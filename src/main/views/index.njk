{% extends "macro/main.njk" %}
{% set title = "Sample PDF Generator" %}

{% block header %}
    <h1>{{ title }}</h1>
{% endblock %}
{% block content %}
    <form method="POST">
        First name:<br>
        <input type="text" name="firstname" value="{{ form.model.firstName }}">
        <br>
        Last name:<br>
        <input type="text" name="lastname" value="{{ form.model.lastName }}">
        <br><br>
        {% for row in form.model.amountLines %}
            <div class="amount-input">
                Description:
                <input type="text" name="amount[{{ loop.index0 }}][desc]" value="{{ row.desc }}">
                Quantity:
                <input type="number" name="amount[{{ loop.index0 }}][quantity]" value="{{ row.quantity }}">
                Value:
                <input type="number" name="amount[{{ loop.index0 }}][value]" value="{{ row.value }}">
                <br>
            </div>
        {% endfor %}
        <a href="javascript:addRow()">Add a row</a>
        <a href="javascript:removeRow()">Remove a row</a>
        <br>
        <input type="submit" value="Submit">
    </form>
    {% if form.errors.length > 0 %}
        <div class="errors">
            <h5>Errors:</h5>
            <ul>
                {% for error in form.errors %}
                    <li>{{ error.property }}: {{ form.getValidationMessageFor(error.property) }}</li>
                {% endfor %}
            </ul>
        </div>
    {% endif %}
{% endblock %}

{% block scripts %}
    <script>
        function addRow () {
            let elements = document.getElementsByClassName("amount-input")
            let last = elements[elements.length - 1]
            last.append(removeValues(incrementId(last.cloneNode(true))))
        }

        function removeRow () {
            let elements = document.getElementsByClassName("amount-input")
            if (elements.length > 1) {
                elements[elements.length - 1].remove()
            }
        }

        function incrementId (node) {
            node.innerHTML = node.innerHTML.replace(/amount\[(\d+)\]/g, function (match, capturedRowIndex) {
                return 'amount[' + (parseInt(capturedRowIndex) + 1) + ']'
            })
            return node
        }

        function removeValues (node) {
            node.setAttribute("value", "")
            return node
        }
    </script>
{% endblock %}